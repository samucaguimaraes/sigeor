/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t21_acesso
{
	#region Declarations
    pageBase pb = new pageBase();
	private int _t21_cd_acesso;
	private string _t02_cd_usuario;
	private string _nm_ip;
	private DateTime _dt_data;
	private bool _found;

	#endregion

	#region Properties

	public int t21_cd_acesso
	{
		get { return _t21_cd_acesso; }
		set { _t21_cd_acesso = value; }
	}

	public string t02_cd_usuario
	{
		get { return _t02_cd_usuario; }
		set { _t02_cd_usuario = value; }
	}

	public string nm_ip
	{
		get { return _nm_ip; }
		set { _nm_ip = value; }
	}

	public DateTime dt_data
	{
		get { return _dt_data; }
		set { _dt_data = value; }
	}

	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

	public DataSet List()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlDataAdapter adp = new SqlDataAdapter("usp_t21_acessoList", sqlConn);
		DataSet ds = new DataSet();

		try
		{
			sqlConn.Open();
			adp.SelectCommand.CommandType = CommandType.Text;
			adp.Fill(ds);
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			adp.Dispose();
			sqlConn.Dispose();
		}

		return ds;
	}

	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t21_acessoSelect", sqlConn);
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t21_cd_acesso"])) _t21_cd_acesso = (int) data["t21_cd_acesso"];
				if (!Convert.IsDBNull(data["t02_cd_usuario"])) _t02_cd_usuario = (string) data["t02_cd_usuario"];
				if (!Convert.IsDBNull(data["nm_ip"])) _nm_ip = (string) data["nm_ip"];
				if (!Convert.IsDBNull(data["dt_data"])) _dt_data = (DateTime) data["dt_data"];
			}
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}

	#endregion

	#region Save

	public bool Save()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("insert into t21_acesso values(@t02_cd_usuario,@nm_ip, @dt_data)", sqlConn);
		bool result;

		cmd.Parameters.Add("@t02_cd_usuario", SqlDbType.VarChar, 20).Value = _t02_cd_usuario;
		cmd.Parameters.Add("@nm_ip", SqlDbType.VarChar, 100).Value = _nm_ip;
		cmd.Parameters.Add("@dt_data", SqlDbType.DateTime).Value = _dt_data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t21_acessoUpdate", sqlConn);
		bool result;

		cmd.Parameters.Add("@t21_cd_acesso", SqlDbType.Int).Value = _t21_cd_acesso;
		cmd.Parameters.Add("@t02_cd_usuario", SqlDbType.VarChar, 20).Value = _t02_cd_usuario;
		cmd.Parameters.Add("@nm_ip", SqlDbType.VarChar, 100).Value = _nm_ip;
		cmd.Parameters.Add("@dt_data", SqlDbType.DateTime).Value = _dt_data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t21_acessoDelete", sqlConn);
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion
}
