/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t05_parceiro
{
	#region Declarations
    pageBase pb = new pageBase();
	private int _t05_cd_parceiro;
	private int _t01_cd_entidade;
	private string _nm_parceiro;
    private string _nm_arquivo;
	private DateTime _dt_cadastro;
	private DateTime _dt_alterado;
    private bool _fl_entidade;
    private string _nm_cnpj;
    private string _order;
	private bool _found;

	#endregion

	#region Properties

	public int t05_cd_parceiro
	{
		get { return _t05_cd_parceiro; }
		set { _t05_cd_parceiro = value; }
	}

	public int t01_cd_entidade
	{
		get { return _t01_cd_entidade; }
		set { _t01_cd_entidade = value; }
	}

	public string nm_parceiro
	{
		get { return _nm_parceiro; }
		set { _nm_parceiro = value; }
	}

    public string nm_arquivo
    {
        get { return _nm_arquivo; }
        set { _nm_arquivo = value; }
    }

	public DateTime dt_cadastro
	{
		get { return _dt_cadastro; }
		set { _dt_cadastro = value; }
	}

	public DateTime dt_alterado
	{
		get { return _dt_alterado; }
		set { _dt_alterado = value; }
	}
    public bool fl_entidade
    {
        get { return _fl_entidade; }
        set { _fl_entidade = value; }
    }

    public string nm_cnpj
    {
        get { return _nm_cnpj; }
        set { _nm_cnpj = value; }
    }

    public string order
    {
        get { return _order; }
        set { _order = value; }
    }
	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

	public DataSet List()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select * from t05_parceiro where t01_cd_entidade=@t01_cd_entidade "+ _order, sqlConn);
        adp.SelectCommand.Parameters.Add("@t01_cd_entidade", SqlDbType.Int).Value = _t01_cd_entidade;
		DataSet ds = new DataSet();

		try
		{
			sqlConn.Open();
			adp.SelectCommand.CommandType = CommandType.Text;
			adp.Fill(ds);
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			adp.Dispose();
			sqlConn.Dispose();
		}

		return ds;
	}

    public DataSet List2()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select * from t05_parceiro  " + _order, sqlConn);
        //adp.SelectCommand.Parameters.Add("@t01_cd_entidade", SqlDbType.Int).Value = _t01_cd_entidade;
        DataSet ds = new DataSet();

        try
        {
            sqlConn.Open();
            adp.SelectCommand.CommandType = CommandType.Text;
            adp.Fill(ds);
        }

        catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); }

        finally
        {
            sqlConn.Close();
            adp.Dispose();
            sqlConn.Dispose();
        }

        return ds;
    }

	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("select * from t05_parceiro where t05_cd_parceiro=@t05_cd_parceiro", sqlConn);
        cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t05_cd_parceiro"])) _t05_cd_parceiro = (int) data["t05_cd_parceiro"];
				if (!Convert.IsDBNull(data["t01_cd_entidade"])) _t01_cd_entidade = (int) data["t01_cd_entidade"];
				if (!Convert.IsDBNull(data["nm_parceiro"])) _nm_parceiro = (string) data["nm_parceiro"];
                if (!Convert.IsDBNull(data["nm_arquivo"])) _nm_arquivo = (string)data["nm_arquivo"];
				if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime) data["dt_cadastro"];
				if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime) data["dt_alterado"];
                if (!Convert.IsDBNull(data["fl_entidade"])) _fl_entidade = (bool)data["fl_entidade"];
                if (!Convert.IsDBNull(data["nm_cnpj"])) _nm_cnpj = (string)data["nm_cnpj"];
			}
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}

	#endregion

	#region Save

	public bool Save()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("insert into t05_parceiro values("+
            "@t01_cd_entidade, @nm_parceiro, @nm_arquivo, @dt_cadastro, @dt_alterado,@fl_entidade,@nm_cnpj)", sqlConn);
		bool result;

		cmd.Parameters.Add("@t01_cd_entidade", SqlDbType.Int).Value = _t01_cd_entidade;
		cmd.Parameters.Add("@nm_parceiro", SqlDbType.VarChar, 500).Value = _nm_parceiro;
        cmd.Parameters.Add("@nm_arquivo", SqlDbType.VarChar, 500).Value = _nm_arquivo;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;
        cmd.Parameters.Add("@fl_entidade", SqlDbType.Bit).Value = _fl_entidade;
        cmd.Parameters.Add("@nm_cnpj", SqlDbType.VarChar, 100).Value = _nm_cnpj;
		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("update t05_parceiro set nm_parceiro=@nm_parceiro, nm_cnpj=@nm_cnpj, " +
            "dt_alterado=@dt_alterado "+ _order +" where t05_cd_parceiro=@t05_cd_parceiro", sqlConn);
		bool result;

		cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
		//cmd.Parameters.Add("@t01_cd_entidade", SqlDbType.Int).Value = _t01_cd_entidade;
		cmd.Parameters.Add("@nm_parceiro", SqlDbType.VarChar, 500).Value = _nm_parceiro;
		//cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;
        cmd.Parameters.Add("@nm_cnpj", SqlDbType.VarChar, 100).Value = _nm_cnpj;
		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("delete from t05_parceiro where t05_cd_parceiro=@t05_cd_parceiro", sqlConn);
        cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion
}
