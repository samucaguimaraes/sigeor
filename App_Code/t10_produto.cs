/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t10_produto
{
	#region Declarations
    pageBase pb = new pageBase();
	private int _t10_cd_produto;
	private int _t08_cd_acao;
	private string _ds_produto;
	private int _nu_ano;
	private string _nm_medida;
	private decimal _vl_previsto;
	private decimal _vl_realizado;
	private DateTime _dt_cadastro;
	private DateTime _dt_alterado;
    private string _order;
	private bool _found;

	#endregion

	#region Properties

	public int t10_cd_produto
	{
		get { return _t10_cd_produto; }
		set { _t10_cd_produto = value; }
	}

	public int t08_cd_acao
	{
		get { return _t08_cd_acao; }
		set { _t08_cd_acao = value; }
	}

	public string ds_produto
	{
		get { return _ds_produto; }
		set { _ds_produto = value; }
	}

	public int nu_ano
	{
		get { return _nu_ano; }
		set { _nu_ano = value; }
	}

	public string nm_medida
	{
		get { return _nm_medida; }
		set { _nm_medida = value; }
	}

	public decimal vl_previsto
	{
		get { return _vl_previsto; }
		set { _vl_previsto = value; }
	}

	public decimal vl_realizado
	{
		get { return _vl_realizado; }
		set { _vl_realizado = value; }
	}

	public DateTime dt_cadastro
	{
		get { return _dt_cadastro; }
		set { _dt_cadastro = value; }
	}

	public DateTime dt_alterado
	{
		get { return _dt_alterado; }
		set { _dt_alterado = value; }
	}
    public string order
    {
        get { return _order; }
        set { _order = value; }
    }
	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

	public DataSet List()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select t10.t10_cd_produto, convert(varchar(4000),t10.ds_produto) as ds_produto,t10.nm_medida, "+
        "sum(vl_p1 + vl_p2+ vl_p3+ vl_p4+ vl_p5+ vl_p6+ vl_p7+ vl_p8+ vl_p9+ vl_p10+ vl_p11+ vl_p12) as vl_p, "+
        "sum(vl_r1+ vl_r2+ vl_r3+ vl_r4+ vl_r5+ vl_r6+ vl_r7+ vl_r8+ vl_r9+ vl_r10+ vl_r11+ vl_r12) as vl_r "+
        "from t10_produto t10 left join t27_vlproduto t27  "+
        "on t10.t10_cd_produto = t27.t10_cd_produto "+
        "where t10.t08_cd_acao=@t08_cd_acao " +
        "group by t10.t10_cd_produto, convert(varchar(4000),t10.ds_produto),t10.nm_medida " + _order, sqlConn);
        adp.SelectCommand.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
		DataSet ds = new DataSet();

		try
		{
			sqlConn.Open();
			adp.SelectCommand.CommandType = CommandType.Text;
			adp.Fill(ds);
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			adp.Dispose();
			sqlConn.Dispose();
		}

		return ds;
	}

    public DataSet ListCalc()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select " +
        "sum(vl_p1 + vl_p2+ vl_p3+ vl_p4+ vl_p5+ vl_p6+ vl_p7+ vl_p8+ vl_p9+ vl_p10+ vl_p11+ vl_p12) as  previsto, " +
        "sum(vl_r1+ vl_r2+ vl_r3+ vl_r4+ vl_r5+ vl_r6+ vl_r7+ vl_r8+ vl_r9+ vl_r10+ vl_r11+ vl_r12) as realizado " +
        "from t10_produto t10 left join t27_vlproduto t27 " +
        "on t10.t10_cd_produto = t27.t10_cd_produto " +
        "where t10.t08_cd_acao==@t08_cd_acao " + _order, sqlConn);
        adp.SelectCommand.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
        DataSet ds = new DataSet();

        try
        {
            sqlConn.Open();
            adp.SelectCommand.CommandType = CommandType.Text;
            adp.Fill(ds);
        }

        catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

        finally
        {
            sqlConn.Close();
            adp.Dispose();
            sqlConn.Dispose();
        }

        return ds;
    }
	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("select * from t10_produto where t10_cd_produto=@t10_cd_produto", sqlConn);
        cmd.Parameters.Add("@t10_cd_produto", SqlDbType.Int).Value = _t10_cd_produto;
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t10_cd_produto"])) _t10_cd_produto = (int) data["t10_cd_produto"];
				if (!Convert.IsDBNull(data["t08_cd_acao"])) _t08_cd_acao = (int) data["t08_cd_acao"];
				if (!Convert.IsDBNull(data["ds_produto"])) _ds_produto = (string) data["ds_produto"];
				if (!Convert.IsDBNull(data["nu_ano"])) _nu_ano = (int) data["nu_ano"];
				if (!Convert.IsDBNull(data["nm_medida"])) _nm_medida = (string) data["nm_medida"];
				if (!Convert.IsDBNull(data["vl_previsto"])) _vl_previsto = (decimal) data["vl_previsto"];
				if (!Convert.IsDBNull(data["vl_realizado"])) _vl_realizado = (decimal) data["vl_realizado"];
				if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime) data["dt_cadastro"];
				if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime) data["dt_alterado"];
			}
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}

    public void RetrieveCod()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("select * from t10_produto where t08_cd_acao=@t08_cd_acao and nm_medida=@nm_medida order by dt_cadastro desc", sqlConn);
        cmd.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
        cmd.Parameters.Add("@nm_medida", SqlDbType.VarChar, 50).Value = _nm_medida;
        SqlDataReader data;

        try
        {
            sqlConn.Open();
            cmd.CommandType = CommandType.Text;
            data = cmd.ExecuteReader();

            if (data.Read())
            {
                _found = true;
                if (!Convert.IsDBNull(data["t10_cd_produto"])) _t10_cd_produto = (int)data["t10_cd_produto"];
                if (!Convert.IsDBNull(data["t08_cd_acao"])) _t08_cd_acao = (int)data["t08_cd_acao"];
                if (!Convert.IsDBNull(data["ds_produto"])) _ds_produto = (string)data["ds_produto"];
                if (!Convert.IsDBNull(data["nu_ano"])) _nu_ano = (int)data["nu_ano"];
                if (!Convert.IsDBNull(data["nm_medida"])) _nm_medida = (string)data["nm_medida"];
                if (!Convert.IsDBNull(data["vl_previsto"])) _vl_previsto = (decimal)data["vl_previsto"];
                if (!Convert.IsDBNull(data["vl_realizado"])) _vl_realizado = (decimal)data["vl_realizado"];
                if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime)data["dt_cadastro"];
                if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime)data["dt_alterado"];
            }
        }

        catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); }

        finally
        {
            sqlConn.Close();
            cmd.Dispose();
            sqlConn.Dispose();
        }
    }
	#endregion

	#region Save

	public bool Save()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("insert into t10_produto values(@t08_cd_acao,"+
            "@ds_produto, @nu_ano, @nm_medida, @vl_previsto, @vl_realizado, @dt_cadastro, @dt_alterado)", sqlConn);
		bool result;

		cmd.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
		cmd.Parameters.Add("@ds_produto", SqlDbType.Text).Value = _ds_produto;
		cmd.Parameters.Add("@nu_ano", SqlDbType.Int).Value = _nu_ano;
		cmd.Parameters.Add("@nm_medida", SqlDbType.VarChar, 50).Value = _nm_medida;
		cmd.Parameters.Add("@vl_previsto", SqlDbType.Decimal).Value = _vl_previsto;
		cmd.Parameters.Add("@vl_realizado", SqlDbType.Decimal).Value = _vl_realizado;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("update t10_produto set ds_produto=@ds_produto, nu_ano=@nu_ano, nm_medida=@nm_medida, "+
            "vl_previsto=@vl_previsto, vl_realizado=@vl_realizado, dt_alterado=@dt_alterado where t10_cd_produto=@t10_cd_produto", sqlConn);
		bool result;

		cmd.Parameters.Add("@t10_cd_produto", SqlDbType.Int).Value = _t10_cd_produto;
		//cmd.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
		cmd.Parameters.Add("@ds_produto", SqlDbType.Text).Value = _ds_produto;
		cmd.Parameters.Add("@nu_ano", SqlDbType.Int).Value = _nu_ano;
		cmd.Parameters.Add("@nm_medida", SqlDbType.VarChar, 50).Value = _nm_medida;
		cmd.Parameters.Add("@vl_previsto", SqlDbType.Decimal).Value = _vl_previsto;
		cmd.Parameters.Add("@vl_realizado", SqlDbType.Decimal).Value = _vl_realizado;
		//cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("delete from t10_produto where t10_cd_produto=@t10_cd_produto", sqlConn);
        cmd.Parameters.Add("@t10_cd_produto", SqlDbType.Int).Value = _t10_cd_produto;
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion
}
