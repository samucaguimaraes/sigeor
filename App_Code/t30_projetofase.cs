/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t30_projetofase
{
	
    
    #region Declarations
    pageBase pb = new pageBase();
	private int _t30_cd_projetofase;
	private int _t03_cd_projeto;
	private string _t02_cd_usuario;
	private string _t02_cd_usuario_monitoramento;
    private int _t04_cd_tipologia;
    private int _t01_cd_entidade;
	private string _nm_projeto;
	private string _ds_publico;
	private string _ds_objetivo;
	private string _ds_usuariofinal;
	private DateTime _dt_inicio;
	private DateTime _dt_fim;
	private DateTime _dt_acordo;
    private DateTime _dt_cadastro;
    private string _query;
	private bool _found;

	#endregion

	#region Properties

	public int t30_cd_projetofase
	{
		get { return _t30_cd_projetofase; }
		set { _t30_cd_projetofase = value; }
	}

	public int t03_cd_projeto
	{
		get { return _t03_cd_projeto; }
		set { _t03_cd_projeto = value; }
	}

	public string t02_cd_usuario
	{
		get { return _t02_cd_usuario; }
		set { _t02_cd_usuario = value; }
	}

	public string t02_cd_usuario_monitoramento
	{
		get { return _t02_cd_usuario_monitoramento; }
		set { _t02_cd_usuario_monitoramento = value; }
	}

    public int t04_cd_tipologia
    {
        get { return _t04_cd_tipologia; }
        set { _t04_cd_tipologia = value; }
    }

    public int t01_cd_entidade
    {
        get { return _t01_cd_entidade; }
        set { _t01_cd_entidade = value; }
    }

	public string nm_projeto
	{
		get { return _nm_projeto; }
		set { _nm_projeto = value; }
	}

	public string ds_publico
	{
		get { return _ds_publico; }
		set { _ds_publico = value; }
	}

	public string ds_objetivo
	{
		get { return _ds_objetivo; }
		set { _ds_objetivo = value; }
	}

	public string ds_usuariofinal
	{
		get { return _ds_usuariofinal; }
		set { _ds_usuariofinal = value; }
	}

    public DateTime dt_inicio
	{
		get { return _dt_inicio; }
		set { _dt_inicio = value; }
	}

    public DateTime dt_fim
	{
		get { return _dt_fim; }
		set { _dt_fim = value; }
	}

    public DateTime dt_acordo
	{
		get { return _dt_acordo; }
		set { _dt_acordo = value; }
	}

    public DateTime dt_cadastro
	{
		get { return _dt_cadastro; }
		set { _dt_cadastro = value; }
	}
    
    public string query
    {
        get { return _query; }
        set { _query = value; }
    }

	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

	public DataSet List()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select * from t30_projetofase where t03_cd_projeto=@t03_cd_projeto", sqlConn);
        adp.SelectCommand.Parameters.Add("@t03_cd_projeto", SqlDbType.Int).Value = _t03_cd_projeto;
		DataSet ds = new DataSet();

		try
		{
			sqlConn.Open();
			adp.SelectCommand.CommandType = CommandType.Text;
			adp.Fill(ds);
		}

		catch { throw; }

		finally
		{
			sqlConn.Close();
			adp.Dispose();
			sqlConn.Dispose();
		}

		return ds;
	}

	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("select * from t30_projetofase where", sqlConn);
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t30_cd_projetofase"])) _t30_cd_projetofase = (int) data["t30_cd_projetofase"];
				if (!Convert.IsDBNull(data["t03_cd_projeto"])) _t03_cd_projeto = (int) data["t03_cd_projeto"];
				if (!Convert.IsDBNull(data["t02_cd_usuario"])) _t02_cd_usuario = (string) data["t02_cd_usuario"];
				if (!Convert.IsDBNull(data["t02_cd_usuario_monitoramento"])) _t02_cd_usuario_monitoramento = (string) data["t02_cd_usuario_monitoramento"];
                if (!Convert.IsDBNull(data["t04_cd_tipologia"])) _t04_cd_tipologia = (int)data["t04_cd_tipologia"];
                if (!Convert.IsDBNull(data["t01_cd_entidade"])) _t01_cd_entidade = (int)data["t01_cd_entidade"];
				if (!Convert.IsDBNull(data["nm_projeto"])) _nm_projeto = (string) data["nm_projeto"];
				if (!Convert.IsDBNull(data["ds_publico"])) _ds_publico = (string) data["ds_publico"];
				if (!Convert.IsDBNull(data["ds_objetivo"])) _ds_objetivo = (string) data["ds_objetivo"];
				if (!Convert.IsDBNull(data["ds_usuariofinal"])) _ds_usuariofinal = (string) data["ds_usuariofinal"];
				if (!Convert.IsDBNull(data["dt_inicio"])) _dt_inicio = (DateTime) data["dt_inicio"];
				if (!Convert.IsDBNull(data["dt_fim"])) _dt_fim = (DateTime) data["dt_fim"];
				if (!Convert.IsDBNull(data["dt_acordo"])) _dt_acordo = (DateTime) data["dt_acordo"];
				if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime) data["dt_cadastro"];
			}
		}

		catch { throw; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}
    
    public void RetrieveCod()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("select * from t30_projetofase where t03_cd_projeto=@t03_cd_projeto order by dt_cadastro desc", sqlConn);
        cmd.Parameters.Add("@t03_cd_projeto", SqlDbType.Int).Value = _t03_cd_projeto;
        SqlDataReader data;

        try
        {
            sqlConn.Open();
            cmd.CommandType = CommandType.Text;
            data = cmd.ExecuteReader();

            if (data.Read())
            {
                _found = true;
                if (!Convert.IsDBNull(data["t30_cd_projetofase"])) _t30_cd_projetofase = (int)data["t30_cd_projetofase"];
            }
        }

        catch { throw; }

        finally
        {
            sqlConn.Close();
            cmd.Dispose();
            sqlConn.Dispose();
        }
    }
	#endregion

	#region Save

    public bool Save()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        sb.Append("INSERT INTO t30_projetofase ");
        sb.Append("(t03_cd_projeto,t02_cd_usuario,t02_cd_usuario_monitoramento,");
        sb.Append("t04_cd_tipologia,t01_cd_entidade,nm_projeto,ds_publico,ds_objetivo,");
        sb.Append("ds_usuariofinal, ");
        if (_dt_inicio.Year > 1) { sb.Append("dt_inicio, "); }
        if (_dt_fim.Year > 1) { sb.Append("dt_fim, "); }
        if (_dt_acordo.Year > 1) { sb.Append("dt_acordo, "); }
        sb.Append("dt_cadastro)");
        sb.Append(" VALUES ");
        sb.Append("(@t03_cd_projeto, @t02_cd_usuario, @t02_cd_usuario_monitoramento, ");
        sb.Append("@t04_cd_tipologia, @t01_cd_entidade, @nm_projeto, @ds_publico, @ds_objetivo, ");
        sb.Append("@ds_usuariofinal,");
        if (_dt_inicio.Year > 1) { sb.Append("@dt_inicio, "); }
        if (_dt_fim.Year > 1) { sb.Append("@dt_fim, "); }
        if (_dt_acordo.Year > 1) { sb.Append("@dt_acordo, "); }       
        sb.Append("getdate())");
        SqlCommand cmd = new SqlCommand(sb.ToString(), sqlConn);

        bool result;

        cmd.Parameters.Add("@t03_cd_projeto", SqlDbType.Int).Value = _t03_cd_projeto;
        cmd.Parameters.Add("@t02_cd_usuario", SqlDbType.VarChar, 20).Value = _t02_cd_usuario;
        cmd.Parameters.Add("@t02_cd_usuario_monitoramento", SqlDbType.VarChar, 20).Value = _t02_cd_usuario_monitoramento;
        cmd.Parameters.Add("@t04_cd_tipologia", SqlDbType.Int).Value = _t04_cd_tipologia;
        cmd.Parameters.Add("@t01_cd_entidade", SqlDbType.Int).Value = _t01_cd_entidade;
        cmd.Parameters.Add("@nm_projeto", SqlDbType.VarChar, 500).Value = _nm_projeto;
        cmd.Parameters.Add("@ds_publico", SqlDbType.Text).Value = _ds_publico;
        cmd.Parameters.Add("@ds_objetivo", SqlDbType.Text).Value = _ds_objetivo;
        cmd.Parameters.Add("@ds_usuariofinal", SqlDbType.Text).Value = _ds_usuariofinal;
        if (_dt_inicio.Year > 1) { cmd.Parameters.Add("@dt_inicio", SqlDbType.DateTime).Value = _dt_inicio; }
        if (_dt_fim.Year > 1) { cmd.Parameters.Add("@dt_fim", SqlDbType.DateTime).Value = _dt_fim; }
        if (_dt_acordo.Year > 1) { cmd.Parameters.Add("@dt_acordo", SqlDbType.DateTime).Value = _dt_acordo; }

        //cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;

        try
        {
            sqlConn.Open();
            cmd.CommandType = CommandType.Text;
            result = Convert.ToBoolean(cmd.ExecuteNonQuery());
        }

        catch (Exception ex)
        {
            System.Web.HttpContext.Current.Response.Write(cmd.CommandText+"<br>"+ex);
            result = false;
        }

        finally
        {
            sqlConn.Close();
            cmd.Dispose();
            sqlConn.Dispose();
        }

        return result;
    }

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("update t30_projetofase set where", sqlConn);
		bool result;

		cmd.Parameters.Add("@t30_cd_projetofase", SqlDbType.Int).Value = _t30_cd_projetofase;
		cmd.Parameters.Add("@t03_cd_projeto", SqlDbType.Int).Value = _t03_cd_projeto;
		cmd.Parameters.Add("@t02_cd_usuario", SqlDbType.VarChar, 20).Value = _t02_cd_usuario;
		cmd.Parameters.Add("@t02_cd_usuario_monitoramento", SqlDbType.VarChar, 20).Value = _t02_cd_usuario_monitoramento;
        cmd.Parameters.Add("@t04_cd_tipologia", SqlDbType.Int).Value = _t04_cd_tipologia;
        cmd.Parameters.Add("@t01_cd_entidade", SqlDbType.Int).Value = _t01_cd_entidade;
		cmd.Parameters.Add("@nm_projeto", SqlDbType.VarChar, 500).Value = _nm_projeto;
		cmd.Parameters.Add("@ds_publico", SqlDbType.Text).Value = _ds_publico;
		cmd.Parameters.Add("@ds_objetivo", SqlDbType.Text).Value = _ds_objetivo;
		cmd.Parameters.Add("@ds_usuariofinal", SqlDbType.Text).Value = _ds_usuariofinal;
		cmd.Parameters.Add("@dt_inicio", SqlDbType.DateTime).Value = _dt_inicio;
		cmd.Parameters.Add("@dt_fim", SqlDbType.DateTime).Value = _dt_fim;
		cmd.Parameters.Add("@dt_acordo", SqlDbType.DateTime).Value = _dt_acordo;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch { throw; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("delete from t30_projetofase where", sqlConn);
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch { throw; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion

    public t30_projetofase()
    {
        _nm_projeto = "";
        _ds_publico = "";
        _ds_objetivo = "";
        _ds_usuariofinal = "";
    }
}
