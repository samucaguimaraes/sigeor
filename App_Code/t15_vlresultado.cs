/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t15_vlresultado
{
	#region Declarations
    pageBase pb = new pageBase();
	private int _t15_cd_vlresultado;
	private int _t14_cd_resultado;
	private int _nu_ano;
	private decimal _vl_previsto;
	private decimal _vl_realizado;
	private DateTime _dt_cadastro;
	private DateTime _dt_alterado;
	private bool _found;

	#endregion

	#region Properties

	public int t15_cd_vlresultado
	{
		get { return _t15_cd_vlresultado; }
		set { _t15_cd_vlresultado = value; }
	}

	public int t14_cd_resultado
	{
		get { return _t14_cd_resultado; }
		set { _t14_cd_resultado = value; }
	}

	public int nu_ano
	{
		get { return _nu_ano; }
		set { _nu_ano = value; }
	}

	public decimal vl_previsto
	{
		get { return _vl_previsto; }
		set { _vl_previsto = value; }
	}

	public decimal vl_realizado
	{
		get { return _vl_realizado; }
		set { _vl_realizado = value; }
	}

	public DateTime dt_cadastro
	{
		get { return _dt_cadastro; }
		set { _dt_cadastro = value; }
	}

	public DateTime dt_alterado
	{
		get { return _dt_alterado; }
		set { _dt_alterado = value; }
	}

	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

	public DataSet List()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select * from t15_vlresultado where t14_cd_resultado=@t14_cd_resultado", sqlConn);
        adp.SelectCommand.Parameters.Add("@t14_cd_resultado", SqlDbType.Int).Value = _t14_cd_resultado;
		DataSet ds = new DataSet();

		try
		{
			sqlConn.Open();
			adp.SelectCommand.CommandType = CommandType.Text;
			adp.Fill(ds);
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			adp.Dispose();
			sqlConn.Dispose();
		}

		return ds;
	}

	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("select * from t15_vlresultado where t14_cd_resultado=@t14_cd_resultado and nu_ano=@nu_ano", sqlConn);
        cmd.Parameters.Add("@t14_cd_resultado", SqlDbType.Int).Value = _t14_cd_resultado;
        cmd.Parameters.Add("@nu_ano", SqlDbType.Int).Value = _nu_ano;
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t15_cd_vlresultado"])) _t15_cd_vlresultado = (int) data["t15_cd_vlresultado"];
				if (!Convert.IsDBNull(data["t14_cd_resultado"])) _t14_cd_resultado = (int) data["t14_cd_resultado"];
				if (!Convert.IsDBNull(data["nu_ano"])) _nu_ano = (int) data["nu_ano"];
				if (!Convert.IsDBNull(data["vl_previsto"])) _vl_previsto = (decimal) data["vl_previsto"];
				if (!Convert.IsDBNull(data["vl_realizado"])) _vl_realizado = (decimal) data["vl_realizado"];
				if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime) data["dt_cadastro"];
				if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime) data["dt_alterado"];
			}
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}

	#endregion

	#region Save

	public bool Save()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("insert into t15_vlresultado values(@t14_cd_resultado, @nu_ano, @vl_previsto, @vl_realizado,@dt_cadastro, @dt_alterado)", sqlConn);
		bool result;

		cmd.Parameters.Add("@t14_cd_resultado", SqlDbType.Int).Value = _t14_cd_resultado;
		cmd.Parameters.Add("@nu_ano", SqlDbType.Int).Value = _nu_ano;
		cmd.Parameters.Add("@vl_previsto", SqlDbType.Decimal).Value = _vl_previsto;
		cmd.Parameters.Add("@vl_realizado", SqlDbType.Decimal).Value = _vl_realizado;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("update t15_vlresultado set nu_ano=@nu_ano, vl_previsto=@vl_previsto, vl_realizado=@vl_realizado, dt_alterado=@dt_alterado where t15_cd_vlresultado=@t15_cd_vlresultado", sqlConn);
		bool result;

		cmd.Parameters.Add("@t15_cd_vlresultado", SqlDbType.Int).Value = _t15_cd_vlresultado;
		cmd.Parameters.Add("@t14_cd_resultado", SqlDbType.Int).Value = _t14_cd_resultado;
		cmd.Parameters.Add("@nu_ano", SqlDbType.Int).Value = _nu_ano;
		cmd.Parameters.Add("@vl_previsto", SqlDbType.Decimal).Value = _vl_previsto;
		cmd.Parameters.Add("@vl_realizado", SqlDbType.Decimal).Value = _vl_realizado;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("delete from t15_vlresultado where t14_cd_resultado=@t14_cd_resultado", sqlConn);
        cmd.Parameters.Add("@t14_cd_resultado", SqlDbType.Int).Value = _t14_cd_resultado;
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion
}
