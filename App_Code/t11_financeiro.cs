/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t11_financeiro
{
	#region Declarations
    pageBase pb = new pageBase();
	private int _t11_cd_financeiro;
	private int _t08_cd_acao;
	private int _t05_cd_parceiro;
	private string _nm_entidade;
	private int _nu_ano;
	private decimal _vl_previsto;
	private decimal _vl_realizado;
	private DateTime _dt_cadastro;
	private DateTime _dt_alterado;
    private bool _fl_economico;
    private string _order;
	private bool _found;

	#endregion

	#region Properties

	public int t11_cd_financeiro
	{
		get { return _t11_cd_financeiro; }
		set { _t11_cd_financeiro = value; }
	}

	public int t08_cd_acao
	{
		get { return _t08_cd_acao; }
		set { _t08_cd_acao = value; }
	}

	public int t05_cd_parceiro
	{
		get { return _t05_cd_parceiro; }
		set { _t05_cd_parceiro = value; }
	}

	public string nm_entidade
	{
		get { return _nm_entidade; }
		set { _nm_entidade = value; }
	}

	public int nu_ano
	{
		get { return _nu_ano; }
		set { _nu_ano = value; }
	}

	public decimal vl_previsto
	{
		get { return _vl_previsto; }
		set { _vl_previsto = value; }
	}

	public decimal vl_realizado
	{
		get { return _vl_realizado; }
		set { _vl_realizado = value; }
	}

	public DateTime dt_cadastro
	{
		get { return _dt_cadastro; }
		set { _dt_cadastro = value; }
	}

	public DateTime dt_alterado
	{
		get { return _dt_alterado; }
		set { _dt_alterado = value; }
	}
    public bool fl_economico
    {
        get { return _fl_economico; }
        set { _fl_economico = value; }
    }
    public string order
    {
        get { return _order; }
        set { _order = value; }
    }
	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

    public DataSet List()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select t11.t11_cd_financeiro,t11.fl_economico, t05.nm_parceiro, " +
        "sum(vl_p1 + vl_p2+ vl_p3+ vl_p4+ vl_p5+ vl_p6+ vl_p7+ vl_p8+ vl_p9+ vl_p10+ vl_p11+ vl_p12) as vl_p, " +
        "sum(vl_r1+ vl_r2+ vl_r3+ vl_r4+ vl_r5+ vl_r6+ vl_r7+ vl_r8+ vl_r9+ vl_r10+ vl_r11+ vl_r12) as vl_r " +
        "from t11_financeiro t11 " +
        "left join t05_parceiro t05 " +
        "on t11.t05_cd_parceiro = t05.t05_cd_parceiro " +
        "left join t28_vlfinanceiro t28 " +
        "on t11.t11_cd_financeiro = t28.t11_cd_financeiro " +
        "where t11.t08_cd_acao=@t08_cd_acao group by t05.nm_parceiro, t11.t11_cd_financeiro, t11.fl_economico " + _order, sqlConn);
        adp.SelectCommand.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
        DataSet ds = new DataSet();

        try
        {
            sqlConn.Open();
            adp.SelectCommand.CommandType = CommandType.Text;
            adp.Fill(ds);
        }

        catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); }

        finally
        {
            sqlConn.Close();
            adp.Dispose();
            sqlConn.Dispose();
        }

        return ds;
    }
    public DataSet ListCalc()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select "+
        "sum(vl_p1 + vl_p2+ vl_p3+ vl_p4+ vl_p5+ vl_p6+ vl_p7+ vl_p8+ vl_p9+ vl_p10+ vl_p11+ vl_p12) as  previsto, "+
        "sum(vl_r1+ vl_r2+ vl_r3+ vl_r4+ vl_r5+ vl_r6+ vl_r7+ vl_r8+ vl_r9+ vl_r10+ vl_r11+ vl_r12) as realizado "+
        "from t11_financeiro t11 left join t28_vlfinanceiro t28  "+
        "on t11.t11_cd_financeiro = t28.t11_cd_financeiro " +
        "where t11.t08_cd_acao=@t08_cd_acao " + _order, sqlConn);
        adp.SelectCommand.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
        DataSet ds = new DataSet();

        try
        {
            sqlConn.Open();
            adp.SelectCommand.CommandType = CommandType.Text;
            adp.Fill(ds);
        }

        catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

        finally
        {
            sqlConn.Close();
            adp.Dispose();
            sqlConn.Dispose();
        }

        return ds;
    }
    public DataSet ListInvestimento()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select t05.nm_parceiro, sum(vl_p1 + vl_p2+ vl_p3+ vl_p4+ vl_p5+ vl_p6+ vl_p7+ vl_p8+ vl_p9+ vl_p10+ vl_p11+ vl_p12) as valor " +
            "from t11_financeiro t11 " +
            "left join t05_parceiro t05 " +
            "on t11.t05_cd_parceiro = t05.t05_cd_parceiro " +
            "left join t28_vlfinanceiro t28  "+
            "on t11.t11_cd_financeiro = t28.t11_cd_financeiro " +
            _order + " group by t05.nm_parceiro order by t05.nm_parceiro", sqlConn);
        adp.SelectCommand.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
        DataSet ds = new DataSet();

        try
        {
            sqlConn.Open();
            adp.SelectCommand.CommandType = CommandType.Text;
            adp.Fill(ds);
        }

        catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

        finally
        {
            sqlConn.Close();
            adp.Dispose();
            sqlConn.Dispose();
        }

        return ds;
    }
	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("select * from t11_financeiro where t11_cd_financeiro=@t11_cd_financeiro", sqlConn);
        cmd.Parameters.Add("@t11_cd_financeiro", SqlDbType.Int).Value = _t11_cd_financeiro;
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t11_cd_financeiro"])) _t11_cd_financeiro = (int) data["t11_cd_financeiro"];
				if (!Convert.IsDBNull(data["t08_cd_acao"])) _t08_cd_acao = (int) data["t08_cd_acao"];
				if (!Convert.IsDBNull(data["t05_cd_parceiro"])) _t05_cd_parceiro = (int) data["t05_cd_parceiro"];
				if (!Convert.IsDBNull(data["nm_entidade"])) _nm_entidade = (string) data["nm_entidade"];
				if (!Convert.IsDBNull(data["nu_ano"])) _nu_ano = (int) data["nu_ano"];
				if (!Convert.IsDBNull(data["vl_previsto"])) _vl_previsto = (decimal) data["vl_previsto"];
				if (!Convert.IsDBNull(data["vl_realizado"])) _vl_realizado = (decimal) data["vl_realizado"];
				if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime) data["dt_cadastro"];
				if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime) data["dt_alterado"];
                if (!Convert.IsDBNull(data["fl_economico"])) _fl_economico = (bool)data["fl_economico"];
			}
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}

    public void RetrieveCod()
    {
        SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("select * from t11_financeiro where t05_cd_parceiro=@t05_cd_parceiro and t08_cd_acao=@t08_cd_acao", sqlConn);
        cmd.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
        cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
        SqlDataReader data;

        try
        {
            sqlConn.Open();
            cmd.CommandType = CommandType.Text;
            data = cmd.ExecuteReader();

            if (data.Read())
            {
                _found = true;
                if (!Convert.IsDBNull(data["t11_cd_financeiro"])) _t11_cd_financeiro = (int)data["t11_cd_financeiro"];
                if (!Convert.IsDBNull(data["t08_cd_acao"])) _t08_cd_acao = (int)data["t08_cd_acao"];
                if (!Convert.IsDBNull(data["t05_cd_parceiro"])) _t05_cd_parceiro = (int)data["t05_cd_parceiro"];
                if (!Convert.IsDBNull(data["nm_entidade"])) _nm_entidade = (string)data["nm_entidade"];
                if (!Convert.IsDBNull(data["nu_ano"])) _nu_ano = (int)data["nu_ano"];
                if (!Convert.IsDBNull(data["vl_previsto"])) _vl_previsto = (decimal)data["vl_previsto"];
                if (!Convert.IsDBNull(data["vl_realizado"])) _vl_realizado = (decimal)data["vl_realizado"];
                if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime)data["dt_cadastro"];
                if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime)data["dt_alterado"];
            }
        }

        catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); }

        finally
        {
            sqlConn.Close();
            cmd.Dispose();
            sqlConn.Dispose();
        }
    }
	#endregion

	#region Save

	public bool Save()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("insert into t11_financeiro values("+
            "@t08_cd_acao, @t05_cd_parceiro, null, @nu_ano, @vl_previsto, "+
            "@vl_realizado, @dt_cadastro, @dt_alterado, 'false')", sqlConn);
		bool result;

		cmd.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
		cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
		//cmd.Parameters.Add("@nm_entidade", SqlDbType.VarChar, 200).Value = _nm_entidade;
		cmd.Parameters.Add("@nu_ano", SqlDbType.Int).Value = _nu_ano;
		cmd.Parameters.Add("@vl_previsto", SqlDbType.Decimal).Value = _vl_previsto;
		cmd.Parameters.Add("@vl_realizado", SqlDbType.Decimal).Value = _vl_realizado;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;
        cmd.Parameters.Add("@fl_economico", SqlDbType.Bit).Value = _fl_economico;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("update t11_financeiro set t05_cd_parceiro=@t05_cd_parceiro, "+
            "nu_ano=@nu_ano, vl_previsto=@vl_previsto, vl_realizado=@vl_realizado, dt_alterado=@dt_alterado, fl_economico=@fl_economico " +
            "where t11_cd_financeiro=@t11_cd_financeiro", sqlConn);
		bool result;

		cmd.Parameters.Add("@t11_cd_financeiro", SqlDbType.Int).Value = _t11_cd_financeiro;
		//cmd.Parameters.Add("@t08_cd_acao", SqlDbType.Int).Value = _t08_cd_acao;
		cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
		//cmd.Parameters.Add("@nm_entidade", SqlDbType.VarChar, 200).Value = _nm_entidade;
		cmd.Parameters.Add("@nu_ano", SqlDbType.Int).Value = _nu_ano;
		cmd.Parameters.Add("@vl_previsto", SqlDbType.Decimal).Value = _vl_previsto;
		cmd.Parameters.Add("@vl_realizado", SqlDbType.Decimal).Value = _vl_realizado;
		//cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;
        cmd.Parameters.Add("@fl_economico", SqlDbType.Bit).Value = _fl_economico;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("delete from t11_financeiro where t11_cd_financeiro=@t11_cd_financeiro", sqlConn);
        cmd.Parameters.Add("@t11_cd_financeiro", SqlDbType.Int).Value = _t11_cd_financeiro;
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion
}
