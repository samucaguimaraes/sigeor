/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t25_perfil
{
	#region Declarations
    pageBase pb = new pageBase();
	private int _t25_cd_perfil;
	private string _nm_perfil;
	private string _ds_perfil;
	private string _nm_cod;
	private int _nu_ordem;
	private DateTime _dt_cadastro;
	private DateTime _dt_alterado;
	private bool _found;

	#endregion

	#region Properties

	public int t25_cd_perfil
	{
		get { return _t25_cd_perfil; }
		set { _t25_cd_perfil = value; }
	}

	public string nm_perfil
	{
		get { return _nm_perfil; }
		set { _nm_perfil = value; }
	}

	public string ds_perfil
	{
		get { return _ds_perfil; }
		set { _ds_perfil = value; }
	}

	public string nm_cod
	{
		get { return _nm_cod; }
		set { _nm_cod = value; }
	}

	public int nu_ordem
	{
		get { return _nu_ordem; }
		set { _nu_ordem = value; }
	}

	public DateTime dt_cadastro
	{
		get { return _dt_cadastro; }
		set { _dt_cadastro = value; }
	}

	public DateTime dt_alterado
	{
		get { return _dt_alterado; }
		set { _dt_alterado = value; }
	}

	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

	public DataSet List()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlDataAdapter adp = new SqlDataAdapter("select * from t25_perfil order by nu_ordem", sqlConn);
		DataSet ds = new DataSet();

		try
		{
			sqlConn.Open();
			adp.SelectCommand.CommandType = CommandType.Text;
			adp.Fill(ds);
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			adp.Dispose();
			sqlConn.Dispose();
		}

		return ds;
	}

	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t25_perfilSelect", sqlConn);
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t25_cd_perfil"])) _t25_cd_perfil = (int) data["t25_cd_perfil"];
				if (!Convert.IsDBNull(data["nm_perfil"])) _nm_perfil = (string) data["nm_perfil"];
				if (!Convert.IsDBNull(data["ds_perfil"])) _ds_perfil = (string) data["ds_perfil"];
				if (!Convert.IsDBNull(data["nm_cod"])) _nm_cod = (string) data["nm_cod"];
				if (!Convert.IsDBNull(data["nu_ordem"])) _nu_ordem = (int) data["nu_ordem"];
				if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime) data["dt_cadastro"];
				if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime) data["dt_alterado"];
			}
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}

	#endregion

	#region Save

	public bool Save()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t25_perfilInsert", sqlConn);
		bool result;

		cmd.Parameters.Add("@nm_perfil", SqlDbType.VarChar, 500).Value = _nm_perfil;
		cmd.Parameters.Add("@ds_perfil", SqlDbType.Text).Value = _ds_perfil;
		cmd.Parameters.Add("@nm_cod", SqlDbType.VarChar, 10).Value = _nm_cod;
		cmd.Parameters.Add("@nu_ordem", SqlDbType.Int).Value = _nu_ordem;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t25_perfilUpdate", sqlConn);
		bool result;

		cmd.Parameters.Add("@t25_cd_perfil", SqlDbType.Int).Value = _t25_cd_perfil;
		cmd.Parameters.Add("@nm_perfil", SqlDbType.VarChar, 500).Value = _nm_perfil;
		cmd.Parameters.Add("@ds_perfil", SqlDbType.Text).Value = _ds_perfil;
		cmd.Parameters.Add("@nm_cod", SqlDbType.VarChar, 10).Value = _nm_cod;
		cmd.Parameters.Add("@nu_ordem", SqlDbType.Int).Value = _nu_ordem;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t25_perfilDelete", sqlConn);
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion
}
