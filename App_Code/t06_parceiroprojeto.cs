/* Generated by VB & C#.NET Class Generator */

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public class t06_parceiroprojeto
{
	#region Declarations
    pageBase pb = new pageBase();
	private int _t06_cd_parceiroprojeto;
	private int _t03_cd_projeto;
	private int _t05_cd_parceiro;
	private DateTime _dt_cadastro;
	private DateTime _dt_alterado;
	private bool _found;

	#endregion

	#region Properties

	public int t06_cd_parceiroprojeto
	{
		get { return _t06_cd_parceiroprojeto; }
		set { _t06_cd_parceiroprojeto = value; }
	}

	public int t03_cd_projeto
	{
		get { return _t03_cd_projeto; }
		set { _t03_cd_projeto = value; }
	}

	public int t05_cd_parceiro
	{
		get { return _t05_cd_parceiro; }
		set { _t05_cd_parceiro = value; }
	}

	public DateTime dt_cadastro
	{
		get { return _dt_cadastro; }
		set { _dt_cadastro = value; }
	}

	public DateTime dt_alterado
	{
		get { return _dt_alterado; }
		set { _dt_alterado = value; }
	}

	public bool Found
	{
		get { return _found; }
	}

	#endregion

	#region Functions/Routines

	#region List

	public DataSet List()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlDataAdapter adp = new SqlDataAdapter("select * from t06_parceiroprojeto "+
            "t06 left join t05_parceiro t05 "+
            "on t06.t05_cd_parceiro=t05.t05_cd_parceiro "+
            "where t06.t03_cd_projeto=@t03_cd_projeto order by t05.nm_parceiro", sqlConn);
        adp.SelectCommand.Parameters.Add("@t03_cd_projeto", SqlDbType.Int).Value = _t03_cd_projeto;
		DataSet ds = new DataSet();

		try
		{
			sqlConn.Open();
			adp.SelectCommand.CommandType = CommandType.Text;
			adp.Fill(ds);
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			adp.Dispose();
			sqlConn.Dispose();
		}

		return ds;
	}

	#endregion

	#region Retrieve

	public void Retrieve()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t06_parceiroprojetoSelect", sqlConn);
		SqlDataReader data;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			data = cmd.ExecuteReader();

			if (data.Read())
			{
				_found = true;
				if (!Convert.IsDBNull(data["t06_cd_parceiroprojeto"])) _t06_cd_parceiroprojeto = (int) data["t06_cd_parceiroprojeto"];
				if (!Convert.IsDBNull(data["t03_cd_projeto"])) _t03_cd_projeto = (int) data["t03_cd_projeto"];
				if (!Convert.IsDBNull(data["t05_cd_parceiro"])) _t05_cd_parceiro = (int) data["t05_cd_parceiro"];
				if (!Convert.IsDBNull(data["dt_cadastro"])) _dt_cadastro = (DateTime) data["dt_cadastro"];
				if (!Convert.IsDBNull(data["dt_alterado"])) _dt_alterado = (DateTime) data["dt_alterado"];
			}
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message);  }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}
	}

	#endregion

	#region Save

	public bool Save()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("insert into t06_parceiroprojeto values(@t03_cd_projeto, "+
            "@t05_cd_parceiro,@dt_cadastro, @dt_alterado)", sqlConn);
		bool result;

		cmd.Parameters.Add("@t03_cd_projeto", SqlDbType.Int).Value = _t03_cd_projeto;
		cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Update

	public bool Update()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
		SqlCommand cmd = new SqlCommand("usp_t06_parceiroprojetoUpdate", sqlConn);
		bool result;

		cmd.Parameters.Add("@t06_cd_parceiroprojeto", SqlDbType.Int).Value = _t06_cd_parceiroprojeto;
		cmd.Parameters.Add("@t03_cd_projeto", SqlDbType.Int).Value = _t03_cd_projeto;
		cmd.Parameters.Add("@t05_cd_parceiro", SqlDbType.Int).Value = _t05_cd_parceiro;
		cmd.Parameters.Add("@dt_cadastro", SqlDbType.DateTime).Value = _dt_cadastro;
		cmd.Parameters.Add("@dt_alterado", SqlDbType.DateTime).Value = _dt_alterado;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#region Delete

	public bool Delete()
	{
		SqlConnection sqlConn = new SqlConnection(pb.strConn());
        SqlCommand cmd = new SqlCommand("delete from t06_parceiroprojeto where t06_cd_parceiroprojeto=@t06_cd_parceiroprojeto", sqlConn);
        cmd.Parameters.Add("@t06_cd_parceiroprojeto", SqlDbType.Int).Value = _t06_cd_parceiroprojeto;
		bool result;

		try
		{
			sqlConn.Open();
			cmd.CommandType = CommandType.Text;
			result = Convert.ToBoolean(cmd.ExecuteNonQuery());
		}

		catch (Exception ex) { System.Web.HttpContext.Current.Response.Write(ex.Message); result = false; }

		finally
		{
			sqlConn.Close();
			cmd.Dispose();
			sqlConn.Dispose();
		}

		return result;
	}

	#endregion

	#endregion
}
